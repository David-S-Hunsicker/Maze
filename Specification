This is where the Maze specification will go.

create a room object with walls(booleans)
generate a maze of rooms
set two rooms as entrance and exit
remove walls from the rooms to make ONE path
	make sure not to remove edge walls
	put 'path'  rooms into a list
	pick randomly from there, and remove a few more walls, to create additional dead-end paths.
		dead end method will check to see if it's going to break a wall of a room in the solution path, and avoid it.
	
	
	
	
	MAZE GENERATOR

methods:
generate maze()
 2dimensional array of room objects

makeEntrance/Exit()
	choose two "edge" rooms and remove outside wall.
		set exit room "isFinalExit" =true;

knockDownWalls()
	creates solution path= [array of rooms]
		sets (x,y) east wall=false, then sets (x+1,y) west wall = false;
	
makeDeadEnds()	
	choose random solution path rooms, and create dead ends starting there.
	must have safeGuard to prevent dead end from reconnecting.
	
	
	
	
	ADVENTURER
create an iterator(adventurer) to 'walk' through the maze
	north-south-east-west/left-straight-right-back movement loop

	
	